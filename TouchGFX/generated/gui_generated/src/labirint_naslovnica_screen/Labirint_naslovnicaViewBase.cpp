/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/labirint_naslovnica_screen/Labirint_naslovnicaViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Labirint_naslovnicaViewBase::Labirint_naslovnicaViewBase() :
    buttonCallback(this, &Labirint_naslovnicaViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFromRGB(210, 235, 188));
    add(box1);

    textArea1.setXY(64, 13);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(81, 178, 11));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PUJQ));
    add(textArea1);

    play_button.setXY(347, 111);
    play_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID));
    play_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_44XL));
    play_button.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    play_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    play_button.setAction(buttonCallback);
    add(play_button);

    scrollableContainer1.setPosition(0, 61, 329, 211);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    scrollableContainer1.setScrollbarsAlpha(255);
    scrollableContainer1.setScrollbarsPermanentlyVisible();
    textArea2.setXY(6, 7);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6QUR));
    scrollableContainer1.add(textArea2);

    add(scrollableContainer1);

    back_button.setXY(372, 188);
    back_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_50_50_FEBD17_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_50_50_FEBD17_SVG_ID));
    back_button.setIconXY(5, 5);
    back_button.setAction(buttonCallback);
    add(back_button);
}

Labirint_naslovnicaViewBase::~Labirint_naslovnicaViewBase()
{

}

void Labirint_naslovnicaViewBase::setupScreen()
{

}

void Labirint_naslovnicaViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back_button)
    {
        //Interaction1
        //When back_button clicked change screen to Seznam
        //Go to Seznam with screen transition towards West
        application().gotoSeznamScreenCoverTransitionWest();
    }
    if (&src == &play_button)
    {
        //Interaction2
        //When play_button clicked change screen to Labirint
        //Go to Labirint with block transition
        application().gotoLabirintScreenBlockTransition();
    }
}
